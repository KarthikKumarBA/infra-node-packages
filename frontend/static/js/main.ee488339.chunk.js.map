{"version":3,"sources":["LoginValidation.js","Login.js","SignUpValidation.js","Signup.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Validation","values","error","email","test","password","Login","setValues","useState","navigate","useNavigate","errors","setErrors","handleInput","event","prev","[object Object]","target","name","value","React","createElement","className","action","onSubmit","preventDefault","axios","post","concat","process","then","res","data","alert","catch","err","console","log","htmlFor","type","placeholder","onChange","Link","to","Signup","Home","loginData","setLoginData","loading","setLoading","useEffect","get","response","length","Table","striped","bordered","hover","map","login","index","key","id","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ee488339.chunk.js","sourcesContent":["function Validation(values){\r\n   let error = {}\r\n   const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n   const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n   if(values.email === \"\") {\r\n    error.email = \"email should not empty\"\r\n   } \r\n   else if(!email_pattern.test(values.email)) {\r\n    error.email = \"Email not valid\"\r\n   }\r\n   else{\r\n      error.email = \"\"\r\n  }\r\n   if(values.password === \"\") {\r\n    error.password = \"Password should not be empty\"\r\n   } \r\n   else if(!password_pattern.test(values.password)) {\r\n    error.password = \"Password must be at least 8 chartchets\"\r\n   }else{\r\n    error.password = \"\"\r\n   }\r\n\r\n\r\nreturn error;\r\n}\r\n\r\nexport default Validation;","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Validation from './LoginValidation'\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const navigate = useNavigate();\r\n    const [errors, setErrors] = useState({})\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({...prev, [event.target.name]: [event.target.value]}))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(Validation(values));\r\n        if(errors.email === \"\" && errors.password === \"\" ) {\r\n            axios.post(`${process.env.REACT_APP_API_BASE_URL}/login`, values)\r\n            .then (res => {\r\n                if( res.data === \"Success\") {\r\n                    navigate('/home');\r\n                } else {\r\n                    alert (\"No records found! Please check your email or password\")\r\n                }\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n  return ( \r\n    <div className='d-flex justify-content-center align-items-center bg-primary vh-100'>\r\n        <div className='bg-white p-3 rounded w-25'>\r\n            <h2>Sign in</h2>\r\n            <p></p>  \r\n            <form action='' onSubmit={handleSubmit}>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input type='email' placeholder='e.g example@email.com' name='email'\r\n                    onChange={handleInput} className='form-control rounded-0'/>\r\n                    {errors.email && <span className='text-danger'> {errors.email}</span>}\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input type='password' placeholder='Enter password' name='password'\r\n                    onChange={handleInput} className='form-control rounded-0'/>\r\n                    {errors.password && <span className='text-danger'> {errors.password}</span>}\r\n                </div>\r\n                <button type='submit' className='btn btn-success border w-100 rounded-100'>Sign in</button>\r\n                <p>Don't have an account?</p>\r\n                <Link to='/signup' className='btn btn-success border w-100 rounded-100'>Sign up</Link>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n    if(values.name === \"\") {\r\n        error.name = \"name should not empty\"\r\n       } \r\n       else  {\r\n        error.name = \"\"\r\n       }\r\n    if(values.email === \"\") {\r\n     error.email = \"email should not empty\"\r\n    } \r\n    else if(!email_pattern.test(values.email)) {\r\n     error.email = \"Email not valid\"\r\n    }\r\n    else{\r\n        error.email = \"\"\r\n    }\r\n    if(values.password === \"\") {\r\n     error.password = \"Password should not be empty\"\r\n    } \r\n    else if(!password_pattern.test(values.password)) {\r\n     error.password = \"Password must be at least 8 character\"\r\n    }else{\r\n     error.password = \"\"\r\n    }\r\n \r\n \r\n return error;\r\n }\r\n \r\n export default Validation;","import React, {useState} from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Validation from './SignUpValidation'\r\nimport axios from 'axios';\r\n\r\nfunction Signup() {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const navigate = useNavigate();\r\n    const [errors, setErrors] = useState({})\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({...prev, [event.target.name]: [event.target.value]}))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(Validation(values));\r\n        if(errors.name === \"\" && errors.email === \"\" && errors.password === \"\" ) {\r\n            axios.post(`${process.env.REACT_APP_API_BASE_URL}/signup`, values)\r\n            .then (res => {\r\n                navigate('/');\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n  return (\r\n    <div className='d-flex justify-content-center align-items-center bg-primary vh-100'>\r\n        <div className='bg-white p-3 rounded w-25'>\r\n            <h2>Sign up</h2>\r\n            <p> </p>\r\n            <form action='' onSubmit={handleSubmit}>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input type='text' placeholder='Enter Name' \r\n                    name= 'name' onChange={handleInput} className='form-control rounded-0'/>\r\n                    {errors.name && <span className='text-danger'> {errors.name}</span>}\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input type='email' placeholder='e.g example@email.com' \r\n                    name= 'email' onChange={handleInput} className='form-control rounded-0'/>\r\n                    {errors.email && <span className='text-danger'> {errors.email}</span>}\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input type='password' placeholder='Enter password' \r\n                    name= 'password' onChange={handleInput} className='form-control rounded-0'/>\r\n                    {errors.password && <span className='text-danger'> {errors.password}</span>}\r\n                </div>\r\n                <button type='submit' className='btn btn-success border w-100 rounded-100'>Sign up</button>\r\n                <p>Already have an account?</p>\r\n                <Link to='/' className='btn btn-success border w-100 rounded-100'>Sign in</Link>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction Home() {\r\n  const [loginData, setLoginData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/loginData`)\r\n      .then(response => {\r\n        setLoginData(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching login data:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-4\">Login Data</h1>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : loginData.length === 0 ? (\r\n        <p>No login data available</p>\r\n      ) : (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              {/* Add more columns as needed */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loginData.map((login, index) => (\r\n              <tr key={index}>\r\n                <td>{login.id}</td>\r\n                <td>{login.name}</td>\r\n                <td>{login.email}</td>\r\n                {/* Add more columns as needed */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Home","import React from 'react'\nimport Login from './Login'\nimport {BrowserRouter, Routes, Route} from 'react-router-dom'\nimport Signup from './Signup'\nimport Home from './Home'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route path='/' element={<Login/>}></Route>\n      <Route path='/signup' element={<Signup/>}></Route>\n      <Route path='/home' element={<Home/>}></Route>\n    </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}